<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>css</title>
    <url>/2024/03/23/css/</url>
    <content><![CDATA[<p>记录开发过程中遇到的一些css问题</p>
<h2 id="1-一些不了解的css知识"><a href="#1-一些不了解的css知识" class="headerlink" title="1.一些不了解的css知识"></a>1.一些不了解的css知识</h2><h3 id="1-1-父级没有设置高度，子级height-100-失效"><a href="#1-1-父级没有设置高度，子级height-100-失效" class="headerlink" title="1.1 父级没有设置高度，子级height:100%失效"></a>1.1 父级没有设置高度，子级height:100%失效</h3><p>父级没有设置高度（动态高度），子项设置百分比高度会失效，可以再给父级包一层，设置display:flex。原理是flex布局下，子项可以使用百分比设置高度。</p>
<p>例子：文本溢出展示与隐藏<br>.text::before需要设置高度100%，需要在text外面包一层warp,并设置display:flex。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;warp&quot;</span>&gt;</span><br><span class="line">    &lt;input <span class="built_in">type</span>=<span class="string">&quot;checkbox&quot;</span> hidden <span class="built_in">id</span>=<span class="string">&quot;ck&quot;</span> class=<span class="string">&quot;ck&quot;</span>&gt;</span><br><span class="line">    &lt;div class=<span class="string">&quot;text&quot;</span>&gt;</span><br><span class="line">        &lt;label class=<span class="string">&quot;btn&quot;</span> <span class="keyword">for</span>=<span class="string">&quot;ck&quot;</span>&gt;&lt;/label&gt;</span><br><span class="line">        看看您错过了上个月 Google Open Source Live 活动中的哪些精彩内容。了解使用 Istio 观测您的服务、分析流经服务网格的请求等话题。</span><br><span class="line">        看看您错过了上个月 Google Open Source Live 活动中的哪些精彩内容。了解使用 Istio 观测您的服务、分析流经服务网格的请求等话题</span><br><span class="line">    &lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">.warp&#123;</span><br><span class="line">    display: flex;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.text&#123;</span><br><span class="line">    width: 350px;</span><br><span class="line">    border: 1px solid <span class="comment">#c471ed;</span></span><br><span class="line">    margin: 0 auto;</span><br><span class="line">    padding: 0 10px;</span><br><span class="line">    line-height: 1.5;</span><br><span class="line">    max-height: 4.5em;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.btn&#123;</span><br><span class="line">    <span class="built_in">float</span>: right;</span><br><span class="line">    height: 1.5em;</span><br><span class="line">    line-height: 1.5em;</span><br><span class="line">    text-align: center;</span><br><span class="line">    box-sizing: border-box;</span><br><span class="line">    color: <span class="comment">#12c2e9;</span></span><br><span class="line">    border-radius: 4px;</span><br><span class="line">    clear: both;</span><br><span class="line">    position: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.btn::after&#123;</span><br><span class="line">    content: <span class="string">&#x27;展开&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.btn::before&#123;</span><br><span class="line">    content: <span class="string">&#x27;...&#x27;</span>;</span><br><span class="line">    position: absolute;</span><br><span class="line">    left: -10px;</span><br><span class="line">    top: 0;</span><br><span class="line">    /* transform: translateX(-100%); */</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.text::before&#123;</span><br><span class="line">    content: <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="built_in">float</span>: right;</span><br><span class="line">    height: 100%;</span><br><span class="line">    margin-top: -1.5em;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.ck:checked + .text&#123;</span><br><span class="line">    max-height: none;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.ck:checked +.text .btn::after&#123;</span><br><span class="line">    content: <span class="string">&#x27;收缩&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.ck:checked +.text .btn::before&#123;</span><br><span class="line">    visibility: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="1-2通过绝对定位设置子级的宽高"><a href="#1-2通过绝对定位设置子级的宽高" class="headerlink" title="1.2通过绝对定位设置子级的宽高"></a>1.2通过绝对定位设置子级的宽高</h3><p>父元素设置相对定位，子元素设置绝对定位时，子元素设置top:0,bottom:0,则高度为100%，top:0,bottom:50%，则高度为50%。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;father&quot;</span>&gt;</span><br><span class="line">    &lt;div class=<span class="string">&quot;child&quot;</span>&gt;&lt;/div&gt;</span><br><span class="line">&lt;/div&gt;</span><br><span class="line"></span><br><span class="line">.father&#123;</span><br><span class="line">    width:100px;</span><br><span class="line">    height:100px;</span><br><span class="line">    position:relative;</span><br><span class="line">    background-color:black;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.child&#123;</span><br><span class="line">    position:absolute;</span><br><span class="line">    top:0;</span><br><span class="line">    bottom:0;</span><br><span class="line">    left:0;</span><br><span class="line">    background-color:;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-使用svg-css实现环形进度条"><a href="#2-使用svg-css实现环形进度条" class="headerlink" title="2.使用svg+css实现环形进度条"></a>2.使用svg+css实现环形进度条</h2><h3 id="2-1原理"><a href="#2-1原理" class="headerlink" title="2.1原理"></a>2.1原理</h3><p>使用svg和circle标签画出两个相同的圆，将第二个圆设置为圆弧，并设置不同的颜色，圆弧的长度就等于进度。</p>
<h3 id="2-2实现"><a href="#2-2实现" class="headerlink" title="2.2实现"></a>2.2实现</h3><p>HTML伪代码</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;progress-part&quot;</span>&gt;</span><br><span class="line">   &lt;svg class=<span class="string">&quot;progress-svg&quot;</span>&gt;</span><br><span class="line">	//stroke 为圆环属性，stroke-dasharray 属性，这是一个用来控制路径虚线疏密程度的属性，其值是一组描述虚线的短划线与空白间隙长度的数列。例如，如果设置 stroke-dasharray=<span class="string">&quot;5,2&quot;</span>，则路径将以 5 个像素的短划线和 2 个像素的空白间隙交替显示，其中第一个数控制短划线长度，第二个数控制空白间隙长度。当第二个数大于圆周长时，显示为一段圆弧。</span><br><span class="line">         &lt;circle stroke=<span class="string">&quot;rgba(255,255,255,.1)&quot;</span> class=<span class="string">&quot;progress-circle&quot;</span>&gt;&lt;/circle&gt;</span><br><span class="line">         &lt;circle stroke=<span class="string">&quot;#409EFF&quot;</span> stroke-dasharray=<span class="string">&quot;calc(2*3.1415*var(--r)/8),1000&quot;</span> class=<span class="string">&quot;progress-circle&quot;</span>&gt;&lt;/circle&gt;</span><br><span class="line">    &lt;/svg&gt;</span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure>
<p>Css伪代码</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">.progress-part&#123;</span><br><span class="line">    --size:40px;</span><br><span class="line">    --border-width:4px;</span><br><span class="line">    height: var(--size);</span><br><span class="line">    width: var(--size);</span><br><span class="line">    border-radius: 50%;</span><br><span class="line">    position: relative;</span><br><span class="line"></span><br><span class="line">    .progress-svg&#123;</span><br><span class="line">        height: 100%;</span><br><span class="line">        width: 100%;</span><br><span class="line">        transform: rotate(-90deg); //svg是从3点钟方向开始绘制，所以旋转-90度到12点钟位置</span><br><span class="line">	//防止圆环溢出div,半径可以设置为容器大小/2 减去 圆环的宽度/2</span><br><span class="line">        .progress-circle&#123;</span><br><span class="line">            --r:calc(var(--size)/2 - var(--border-width)/2);</span><br><span class="line">            r:var(--r);//半径</span><br><span class="line">            cx:calc(var(--size)/2);//圆心</span><br><span class="line">            cy:calc(var(--size)/2);//圆心</span><br><span class="line">            fill: none;</span><br><span class="line">            stroke-width:var(--border-width); //圆环宽度</span><br><span class="line">            transition: stroke-dasharray .4s linear, stroke .3s;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="3-实现文本炫酷下划线"><a href="#3-实现文本炫酷下划线" class="headerlink" title="3.实现文本炫酷下划线"></a>3.实现文本炫酷下划线</h2><h3 id="3-1原理"><a href="#3-1原理" class="headerlink" title="3.1原理"></a>3.1原理</h3><p>为div设置渐变的背景颜色，设置合适的高度，使其位于文字下方，通过改变背景的宽度，实现动画效果。</p>
<h3 id="3-2实现"><a href="#3-2实现" class="headerlink" title="3.2实现"></a>3.2实现</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;bgLine&quot;</span>&gt;看看您错过了上个月 Google Open Source Live 活动中的哪些精彩内容。了解使用 Istio 观测您的服务、分析流经服务网格的请求等话题&lt;/div&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.bgLine&#123;</span><br><span class="line">    line-height: 2;</span><br><span class="line">    background: -webkit-linear-gradient(left,<span class="comment">#12c2e    #c471ed, #f64f59) no-repeat right bottom;</span></span><br><span class="line">    background-size: 0 2px;</span><br><span class="line">    transition: background-size 1s linear;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.bgLine:hover&#123;</span><br><span class="line">    background-size: 100% 2px;</span><br><span class="line">    background-position-x: left;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>开发记录</category>
      </categories>
  </entry>
  <entry>
    <title>vite配置</title>
    <url>/2024/03/23/vite%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<p>记录一些常用的 vite 配置</p>
<h2 id="1-引用-scss-变量文件"><a href="#1-引用-scss-变量文件" class="headerlink" title="1.引用 scss 变量文件"></a>1.引用 scss 变量文件</h2><p>配置后可以在 scss 中直接使用文件中的变量</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">css:&#123;</span><br><span class="line">    preprocessorOptions:&#123;</span><br><span class="line">        scss:&#123;</span><br><span class="line">            //引用scss变量文件</span><br><span class="line">            additionalData: `@import <span class="string">&quot;@/styles/variables.scss&quot;</span>;`</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-自动引入"><a href="#2-自动引入" class="headerlink" title="2.自动引入"></a>2.自动引入</h2><p>使用unplugin-auto-import和unplugin-vue-components可以自动引入包和组件，配置后需要重新运行项目。如果需要导入unplugin-vue-components不支持的resolver,可以自定义一个resolver,例如@opentiny&#x2F;vue UI库。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">import AutoImport from <span class="string">&#x27;unplugin-auto-import/vite&#x27;</span></span><br><span class="line">import Components from <span class="string">&#x27;unplugin-vue-components/vite&#x27;</span></span><br><span class="line">import &#123; ElementPlusResolver &#125; from <span class="string">&#x27;unplugin-vue-components/resolvers&#x27;</span></span><br><span class="line"></span><br><span class="line">AutoImport(&#123;</span><br><span class="line">    resolvers: [</span><br><span class="line">        ElementPlusResolver(),</span><br><span class="line">        (componentName) =&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (componentName.startsWith(<span class="string">&#x27;Tiny&#x27;</span>))</span><br><span class="line">                <span class="built_in">return</span> &#123; name: componentName.slice(4), from: <span class="string">&#x27;@opentiny/vue&#x27;</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line">    include: [</span><br><span class="line">        /\.[tj]sx?$/, // .ts, .tsx, .js, .jsx</span><br><span class="line">        /\.vue$/, /\.vue\?vue/, // .vue</span><br><span class="line">    ],</span><br><span class="line">    imports: [</span><br><span class="line">        <span class="string">&#x27;vue&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;pinia&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="built_in">dirs</span>: [</span><br><span class="line">        <span class="string">&#x27;./src/type/components/&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;./src/utils/&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;./src/components/icon&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;./src/components/proTable&#x27;</span></span><br><span class="line">    ],</span><br><span class="line">    dts: <span class="string">&#x27;src/auto-import.ts&#x27;</span>,</span><br><span class="line">    vueTemplate: <span class="literal">true</span>,</span><br><span class="line">&#125;)</span><br><span class="line">Components(&#123;</span><br><span class="line">    resolvers: [</span><br><span class="line">        ElementPlusResolver(),</span><br><span class="line">        (componentName) =&gt; &#123;</span><br><span class="line">            <span class="keyword">if</span> (componentName.startsWith(<span class="string">&#x27;Tiny&#x27;</span>))</span><br><span class="line">                <span class="built_in">return</span> &#123; name: componentName.slice(4), from: <span class="string">&#x27;@opentiny/vue&#x27;</span> &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    ],</span><br><span class="line"> &#125;),</span><br></pre></td></tr></table></figure>
<h2 id="3-关闭ts未使用变量的保错"><a href="#3-关闭ts未使用变量的保错" class="headerlink" title="3.关闭ts未使用变量的保错"></a>3.关闭ts未使用变量的保错</h2><p>tsconfig.json文件 noUnusedLocals设置为false</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="string">&quot;compilerOptions&quot;</span>:&#123;</span><br><span class="line">        <span class="string">&quot;noUnusedLocals&quot;</span>: <span class="literal">false</span>,</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="4-设置快捷路径"><a href="#4-设置快捷路径" class="headerlink" title="4.设置快捷路径"></a>4.设置快捷路径</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vite.config.ts</span><br><span class="line">resolve: &#123;</span><br><span class="line">    <span class="built_in">alias</span>: &#123;</span><br><span class="line">        <span class="string">&quot;@&quot;</span>: resolve(__dirname, <span class="string">&quot;./src&quot;</span>),</span><br><span class="line">    &#125;,</span><br><span class="line">&#125;,</span><br><span class="line"></span><br><span class="line">tsconfig.json</span><br><span class="line"><span class="string">&quot;compilerOptions&quot;</span>:&#123;</span><br><span class="line">    <span class="string">&quot;baseUrl&quot;</span>: <span class="string">&quot;./&quot;</span>,</span><br><span class="line">    <span class="string">&quot;paths&quot;</span>: &#123;</span><br><span class="line">        <span class="string">&quot;@/*&quot;</span>: [<span class="string">&quot;src/*&quot;</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="5-vite打包配置"><a href="#5-vite打包配置" class="headerlink" title="5.vite打包配置"></a>5.vite打包配置</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">build: &#123;</span><br><span class="line">    outDir: &quot;dist&quot;,</span><br><span class="line">    minify: &quot;esbuild&quot;,</span><br><span class="line">    // esbuild 打包更快，但是不能去除 console.log，terser打包慢，但能去除 console.log</span><br><span class="line">    // minify: &quot;terser&quot;,</span><br><span class="line">    // terserOptions: &#123;</span><br><span class="line">    // 	compress: &#123;</span><br><span class="line">    // 		drop_console: viteEnv.VITE_DROP_CONSOLE,</span><br><span class="line">    // 		drop_debugger: true</span><br><span class="line">    // 	&#125;</span><br><span class="line">    // &#125;,</span><br><span class="line">    // 禁用 gzip 压缩大小报告，可略微减少打包时间</span><br><span class="line">    reportCompressedSize: false,</span><br><span class="line">    // 规定触发警告的 chunk 大小</span><br><span class="line">    chunkSizeWarningLimit: 2000,</span><br><span class="line">    rollupOptions: &#123;</span><br><span class="line">        output: &#123;</span><br><span class="line">          // 配置静态资源目录，可以解决assets目录下图片打包后无法加载的问题</span><br><span class="line">          chunkFileNames: &quot;assets/js/[name]-[hash].js&quot;,</span><br><span class="line">          entryFileNames: &quot;assets/js/[name]-[hash].js&quot;,</span><br><span class="line">          assetFileNames: &quot;assets/[ext]/[name]-[hash].[ext]&quot;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>开发记录</category>
      </categories>
  </entry>
</search>
